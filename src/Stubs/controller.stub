<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Company;
use App\{{TableName}};
use Illuminate\Http\File;
use Illuminate\Support\Facades\Storage;
use Spatie\Searchable\Search;
class {{TableNames}}Controller extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
    ${{table_names}} = {{TableName}}::{{paginate}};
    return view('{{table_name}}.index',compact('{{table_names}}'));

    }
     public function search(Request $request)
    {

        $final={{TableName}}::orderBy('id','desc')->where('name','fgdh')->get();
        $queries= $request->all();
        ${{table_names}} ={{TableName}}::orderBy('id','desc')->get();
        foreach($queries as $k=>$query){
        if($query!=''){
             if($k=='q'){
                $que=explode(' ',$query);            
                $res=(new Search())
                        ->registerModel({{TableName}}::class,[{{search_fields}}])->search($query);
                        foreach($que as $q){
                    
                            $results=(new Search())
                            ->registerModel({{TableName}}::class,[{{search_fields}}])
                            $res = $res->merge($results);
                        
                        }
            }{{other_search_options}}
            
                


                
                $results = $res->unique()->groupByType();
              
                $reso=collect();
                
                
                foreach ($results as $key => $va) {
                    
                    foreach ($va as $ke => $val) {
                        $value=$val->searchable;
                        $reso=$reso->push($value);
                                        
                    }
                }
                $final=$final->merge($reso);
                ${{table_names}}=$final->unique();
               }
            }    

                
       ${{table_names}}=     ${{table_names}}->paginate(12);

                
    
 
return view('{{table_name}}.search',compact('{{table_names}}'));

    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        
    return view('{{table_name}}.create',compact('emails'));
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {

        $request->validate([{{validate}}]);
        ${{table_name}}=New {{TableName}};
        $this->table($request, ${{table_name}});
        alert()->success('New {{Table Name}} Created', 'Success')->persistent('ok');
        return redirect(url('{{table_names}}'));
    }


    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        ${{table_name}} = {{TableName}}::find($id);
        return view('{{table_name}}.show',compact('{{table_name}}'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
            ${{table_name}} = {{TableName}}::find($id);
            return view('{{table_name}}.edit',compact('{{table_name}}'));


    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        $request->validate([{{validate}}]);
        ${{table_name}}={{TableName}}::find($id);
        $this->table($request, ${{table_name}});
        alert()->success('Item Edited', 'Success')->persistent('ok');
        return back();

    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        ${{table_name}} = {{TableName}}::find($id);
        {{file_delete}}
        ${{table_name}}->delete();
        return redirect(url('admin/{{table_names}}'));
    }



    protected function table(Request $request, {{TableName}} ${{table_name}}){
        {{fields_code}}
    }
}
